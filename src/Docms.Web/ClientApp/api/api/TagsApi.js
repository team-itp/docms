/**
 * DocMS API
 * Document Management System for small companies Web API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateTagRequest from '../model/CreateTagRequest';
import TagResponse from '../model/TagResponse';

/**
* Tags service.
* @module api/TagsApi
* @version v1
*/
export default class TagsApi {

    /**
    * Constructs a new TagsApi. 
    * @alias module:api/TagsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTagsGet operation.
     * @callback module:api/TagsApi~apiTagsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TagResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/TagsApi~apiTagsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TagResponse}
     */
    apiTagsGet(callback) {
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TagResponse;

      return this.apiClient.callApi(
        '/api/Tags', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTagsPost operation.
     * @callback module:api/TagsApi~apiTagsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TagResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateTagRequest} opts.request 
     * @param {module:api/TagsApi~apiTagsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TagResponse}
     */
    apiTagsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['request'];


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      let accepts = ['application/json'];
      let returnType = TagResponse;

      return this.apiClient.callApi(
        '/api/Tags', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }


}
