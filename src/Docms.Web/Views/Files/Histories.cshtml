@model PageableList<DocumentHistory>

@{
    ViewData["Title"] = "ファイル履歴";
    var path = ViewBag.Path as string;
}

<nav>
    <ul class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.ViewFile("")">TOP</a>
        </li>
        @if (path != null)
        {
            var sb = new System.Text.StringBuilder();
            @foreach (var pathComponent in path.Split('/'))
            {
                sb.Append(pathComponent);
                <li class="breadcrumb-item">
                    <a href="@Url.ViewFile(sb.ToString())">@pathComponent</a>
                </li>
                sb.Append('/');
            }
        }
    </ul>
</nav>

<h2>ファイル履歴</h2>

<div class="list-group">
    @foreach (var history in Model.List)
    {
        <a href="@Url.ShowFileInContainer(history.Path)" class="list-group-item list-group-item-action">
            <div class="d-flex w-100 justify-content-between">
                <h5 class="mb-1">
                    @history.Path.Split("/").Last()
                    @if (history.Discriminator == DocumentHistoryDiscriminator.DocumentDeleted)
                    {
                        <text> が削除されました。</text>
                    }
                    else
                    {

                        <text> がアップロードされました。</text>
                    }
                </h5>
                <small class="text-nowrap">@history.Timestamp.ToRelativeString()</small>
            </div>
            <p class="mt-0 mb-1">
                <small>@(history.Path)</small>
            </p>
        </a>
    }
</div>

@if (Model.HasNext || Model.HasPrev)
{
    <nav aria-label="Page navigation">
        <ul class="pagination my-3">
            @if (Model.HasPrev)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.FileHistory(path, Model.CurrentPage - 1, Model.PerPage)" aria-label="前に">
                        <span aria-hidden="true">&lang;</span>
                        <span class="sr-only">前に</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#" aria-label="前に">
                        <span aria-hidden="true">&lang;</span>
                        <span class="sr-only">前に</span>
                    </a>
                </li>
            }
            @for (int i = Math.Max(1, Model.CurrentPage - 5); i <= Math.Min(Math.Max(1, Model.CurrentPage - 5) + 9, Model.LastPage); i++)
            {
                if (i == Model.CurrentPage)
                {
                    <li class="page-item active"><a class="page-link" href="#">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" href="@Url.FileHistory(path, i, Model.PerPage)">@i</a></li>
                }
            }
            @if (Model.HasNext)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.FileHistory(path, Model.CurrentPage + 1, Model.PerPage)" aria-label="次に">
                        <span aria-hidden="true">&rang;</span>
                        <span class="sr-only">次に</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#" aria-label="次に">
                        <span aria-hidden="true">&rang;</span>
                        <span class="sr-only">次に</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
}
