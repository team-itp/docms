@model EnumerableList<DocumentHistory>

@{
    ViewData["Title"] = "ファイル履歴";
    var path = ViewBag.Path as string;
}

<nav>
    <ul class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.ViewFile("")">TOP</a>
        </li>
        @if (path != null)
        {
            var sb = new System.Text.StringBuilder();
            @foreach (var pathComponent in path.Split('/'))
            {
                sb.Append(pathComponent);
                <li class="breadcrumb-item">
                    <a href="@Url.ViewFile(sb.ToString())">@pathComponent</a>
                </li>
                sb.Append('/');
            }
        }
    </ul>
</nav>

<h2>ファイル履歴</h2>

<div class="list-group">
    @foreach (var history in Model.List)
    {
        <div class="list-group-item list-group-item-action">
            <a href="@Url.ShowFileInContainer(history.Path)" class="text-dark" style="text-decoration:none">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">
                        @history.Path.Split("/").Last()
                        @if (history.Discriminator == DocumentHistoryDiscriminator.DocumentDeleted)
                        {
                            <text> が削除されました。</text>
                        }
                        else
                        {

                            <text> がアップロードされました。</text>
                        }
                    </h5>
                    <small class="text-nowrap">@history.Timestamp.ToRelativeString()</small>
                </div>
            </a>
            <div class="d-flex justify-content-between">
                <a href="@Url.ShowFileInContainer(history.Path)" class="text-dark" style="text-decoration:none">
                    <p class="mt-0 mb-1">
                        <small>@(history.Path)</small>
                    </p>
                </a>

                <div>
                    <a href="@Url.Action("DownloadByKey", new { historyId = history.Id })" class="btn btn-sm btn-secondary" download="@(System.IO.Path.GetFileName(history.Path))">ダウンロード</a>
                </div>
            </div>
        </div>
    }
</div>

@if (Model.HasNext || Model.HasPrev)
{
    <nav aria-label="ページャー">
        <ul class="pagination justify-content-center my-3">
            <li>
                @if (Model.HasPrev)
                {
                    <a class="btn page-link mx-3" href="@Url.FileHistory(path, Model.CurrentPage - 1, Model.PerPage)" aria-label="前に">
                        &larr; 前
                    </a>
                }
                else
                {
                    <a class="btn page-link disabled mx-3" href="#" aria-label="前に">
                        &larr; 前
                    </a>
                }
            </li>
            <li>
                @if (Model.HasNext)
                {
                    <a class="btn page-link mx-3" href="@Url.FileHistory(path, Model.CurrentPage + 1, Model.PerPage)" aria-label="次に">
                        次 &rarr;
                    </a>
                }
                else
                {
                    <a class="btn page-link disabled mx-3" href="#" aria-label="次に">
                        次 &rarr;
                    </a>
                }
            </li>
        </ul>
    </nav>
}
