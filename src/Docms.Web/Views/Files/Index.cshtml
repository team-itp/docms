@using Docms.Queries.Blobs
@model BlobEntry

@{
    ViewData["Title"] = Model.Name ?? "ファイル一覧";
    var path = ViewBag.Path as string;
}

<nav class="rounded mb-3" style="background-color: #e9ecef">
    <div class="d-flex justify-content-between align-items-center">
        <ul class="breadcrumb bg-transparent m-0">
            <li class="breadcrumb-item">
                <a href="@Url.ViewFile("")">TOP</a>
            </li>
            @if (path != null)
            {
                var sb = new System.Text.StringBuilder();
                @foreach (var pathComponent in path.Split('/'))
                {
                    <li class="breadcrumb-item">
                        @if (sb.Append(pathComponent).ToString() == path)
                        {
                            <span class="active">@pathComponent</span>
                        }
                        else
                        {
                            <a href="@Url.ViewFile(sb.ToString())">@pathComponent</a>
                        }
                    </li>
                    sb.Append('/');
                }
            }
        </ul>
        @if (User.IsInRole("Administrator"))
        {
            <div class="pr-3">
                <a href="@Url.FileHistory(path)">
                    <span class="fa fa-history"></span>
                </a>
            </div>
        }
    </div>
</nav>

@if (Model is BlobContainer container)
{
    <div class="list-group">
        @foreach (var entry in container.Entries)
        {
            <div class="list-group-item d-flex justify-content-start align-items-center">
                <a class="anchor" name="@entry.Name"></a>
                @if (entry is BlobContainer)
                {
                    <div class="mr-3">
                        <i class="fa fa-2x fa-folder-o"></i>
                    </div>
                    <a href="@Url.ViewFile(entry.Path)">@entry.Name</a>
                }
                else if (entry is Blob imageBlob && imageBlob.ContentType.StartsWith("image"))
                {
                    <div class="mr-3">
                        <i class="fa fa-2x fa-file-image-o"></i>
                    </div>
                    <a class="preview preview-image" href="#@Uri.EscapeDataString(entry.Name)" type="@imageBlob.ContentType" data-href="@Url.DownloadFile(entry.Path)" data-detail-href="@Url.ViewFile(entry.Path)">@entry.Name</a>
                }
                else if (entry is Blob videoBlob && videoBlob.ContentType.StartsWith("video"))
                {
                    <div class="mr-3">
                        <i class="fa fa-2x fa-file-video-o"></i>
                    </div>
                    <a class="preview preview-video" href="#@Uri.EscapeDataString(entry.Name)" type="@videoBlob.ContentType" data-href="@Url.DownloadFile(entry.Path)" data-detail-href="@Url.ViewFile(entry.Path)">@entry.Name</a>
                }
                else
                {
                    <div class="mr-3">
                        <i class="fa fa-2x fa-file-o"></i>
                    </div>
                    <a href="@Url.DownloadFile(entry.Path)">@entry.Name</a>
                }
            </div>
        }
    </div>

    <div class="modal modal-fullscreen fade" tabindex="-1" role="dialog" aria-labelledby="Image" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content bg-dark text-light">
                <div class="modal-header border-dark align-items-center pl-0 pt-5 pt-md-4 pb-1">
                    <div class="button-bar d-flex justify-content-between position-absolute w-100" style="top:0">
                        <div class="d-flex justify-content-between m-0">
                            <button type="button" class="btn btn-link text-light prev-button"><i class="fa fa-arrow-left"></i></button>
                            <button type="button" class="btn btn-link text-light next-button"><i class="fa fa-arrow-right"></i></button>
                        </div>
                        <button type="button" class="btn btn-link text-light" data-dismiss="modal" aria-label="Close"><i class="fa fa-times"></i></button>
                    </div>
                    <a class="view-link text-light btn btn-link">
                        <h5 class="modal-title"></h5>
                    </a>
                </div>
                <div class="modal-body p-0">
                    <div class="data-content text-center position-absolute w-100 pb-2" style="top:0; bottom: 0"></div>
                </div>
            </div>
        </div>
    </div>
}
else if (Model is Blob blob)
{
    <div class="border text-center">
        @if (blob.ContentType.StartsWith("image"))
        {
            <img class="mw-100" alt="@Model.Name" src="@Url.DownloadFile(Model.Path)" />
        }
        else if (blob.ContentType.StartsWith("video"))
        {
            <div class="embed-responsive embed-responsive-16by9">
                <video controls="controls" class="embed-responsive-item">
                    <source src="@Url.DownloadFile(Model.Path)" type="@blob.ContentType" />
                </video>
            </div>
        }
    </div>
    <p class="mt-3">
        <a class="btn btn-outline-primary" href="@Url.DownloadFile(Model.Path)" download="@Model.Name">
            <i class="fa fa-download"></i>
            ダウンロード
        </a>
    </p>
}

@section Scripts {
    <script>
        var $modal = $('.modal');
        var $modalTitle = $modal.find('.modal-title');
        var $modalViewLink = $modal.find('.view-link');
        var $modalContent = $modal.find('.data-content');
        var $modalPrevButton = $modal.find('.prev-button');
        var $modalNextButton = $modal.find('.next-button');
        var $previews = $('.preview');
        var prev = null;
        var next = null;

        $modalPrevButton.on('click', function (e) {
            if (prev) {
                $(prev).click();
            }
        });

        $modalNextButton.on('click', function (e) {
            if (next) {
                $(next).click();
            }
        });

        $previews.on('click', function (e) {
            e.preventDefault();
            var clicked = this;
            var found = false;
            prev = null;
            next = null;
            $previews.each(function (_, e) {
                if (e === clicked) {
                    found = true;
                    return true;
                } else if (!found) {
                    prev = e;
                    return true;
                } else {
                    next = e;
                    return false;
                }
            });

            $modalPrevButton.prop('disabled', !prev)
            $modalNextButton.prop('disabled', !next)

            var $this = $(this);
            var href = $this.attr('href');
            var src = $this.attr('data-href');
            var detailHref = $this.attr('data-detail-href');
            var contentType = $this.attr('type');
            var name = $this.text();
            if (window.location.hash !== href
                && encodeURI(window.location.hash) !== href) {
                window.history.pushState(null, window.document.title, '#' + name);
            }

            if ($this.is('.preview-image')) {
                $modalContent.html('');
                $modalContent.append(
                    $('<img />')
                        .addClass('mw-100 mh-100')
                        .attr('src', src)
                        .attr('alt', name));
            }
            if ($this.is('.preview-video')) {
                $modalContent.html('');
                $modalContent.append(
                    $('<div class="embed-responsive embed-responsive-16by9 mw-100 mh-100" />')
                        .append(
                            $('<video controls="controls" class="embed-responsive-item" />')
                                .append(
                                    $('<source />')
                                        .attr('src', src)
                                        .attr('type', contentType))));
            }

            $modalViewLink.attr('href', detailHref);
            $modalTitle.html(name);
            $modal.modal('show');
        });

        $modal.on('hidden.bs.modal', function () {
            $modalContent.html('');
            if (window.location.hash) {
                window.history.pushState(null, document.title, window.location.pathname);
            }
        });

        $(window).on('hashchange', function (e) {
            if (window.location.hash) {
                $('a[href="' + encodeURI(window.location.hash) + '"]').click();
            } else {
                $modal.modal('hide');
            }
        })

        if (window.location.hash) {
            $('a[href="' + encodeURI(window.location.hash) + '"]').click();
        }

    </script>
}