@model UploadRequest

@using Docms.Web.Identity
@inject JwtTokenProvider JwtTokenProvider

@{
    ViewData["Title"] = "アップロード";
    var token = await JwtTokenProvider.GenerateToken();
}

<h2>アップロード</h2>

<p>書類・画像ファイルをアップロードしてください。50 MB 以下ならば複数のファイルをアップロードできます。</p>
<hr />

<div class="row">
    <div class="col-md-6">
        <form action="@Url.UploadFile(Model.DirPath)" method="POST" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="DirPath" class="control-label"></label>
                <button type="button" class="btn btn-dark btn-sm" data-toggle="modal" data-target="#directory-selection">
                    変更
                </button>
                <div class="my-2">
                    <ul class="breadcrumb" style="background: white">
                        <li class="breadcrumb-item">TOP</li>
                        @if (Model.DirPath != null)
                        {
                            @foreach (var pathComponent in Model.DirPath.Split('/'))
                            {
                                <li class="breadcrumb-item">@pathComponent</li>
                            }
                        }
                    </ul>
                </div>
                <input type="hidden" asp-for="DirPath" readonly />
                <span asp-validation-for="DirPath" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Files" class="control-label"></label>
                <input asp-for="Files" class="form-control-file" />
                <span asp-validation-for="Files" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">アップロード</button>
        </form>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="directory-selection" tabindex="-1" role="dialog" aria-labelledby="directory-selection-label" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="directory-selection-label">ディレクトリの選択</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="direcotry-breadcrumb"></div>
                <div id="directory-list"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">閉じる</button>
                <button type="button" class="btn btn-primary change-directory">変更</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        (function($) {
            var dirPath = undefined;
            var $dialog = $('#directory-selection');
            $dialog.on('show.bs.modal', function() {
                selectNewDirPath('@Html.Raw(Model.DirPath)');
            });

            $dialog.on('click', '.select-directory', function(elem) {
                var $elem = $(elem.currentTarget);
                selectNewDirPath($elem.attr('data-dirPath'))
            });

            $dialog.on('click', '.change-directory', function(elem) {
                window.location.pathname = '/files/upload/' + encodeURI(dirPath);
            });

            $dialog.on('click', '.add-directory', function(elem) {
                var $elem = $(elem.currentTarget);
                var $parent = $elem.parents('.directory-input');
                var dirPath = ($elem.attr('data-dirPath') ? $elem.attr('data-dirPath') + '/' : '') + $parent.find('input').val();
                selectNewDirPath(dirPath)
            });

            function getDirectories(dirPath) {
                return $.get({
                    url: '/api/v1/files',
                    dataType: 'json',
                    headers: {
                        'Authorization': 'Bearer @token'
                    },
                    data: {
                        "path": dirPath
                    }
                });
            }

            var $breadcrumb = $dialog.find('#direcotry-breadcrumb');
            var $list = $dialog.find('#directory-list');

            function selectNewDirPath(newDirPath) {
                dirPath = newDirPath;
                $list.html('');
                showDirectoryBreadcrumb(dirPath);
                getDirectories(dirPath)
                    .done(showDirectoryList)
                    .fail(function(jqXHR, textStatus, errorThrown) {
                        if (jqXHR.status === 404) {
                            showDirectoryList(null);
                        }
                    })
            }

            function showDirectoryBreadcrumb(dirPath) {
                $breadcrumb.html('');
                var $bcUl = $('<ul class="breadcrumb"></ul>').appendTo($breadcrumb);
                var path = '';
                $('<li class="breadcrumb-item"></li>')
                    .append('<button type="button" class="btn btn-link select-directory p-0 align-top" data-dirPath="">TOP</button>')
                    .appendTo($bcUl);
                if (dirPath) {
                    dirPath.split('/').forEach(function (pathComponent) {
                        path = path + pathComponent;
                        $('<li class="breadcrumb-item"></li>')
                            .append('<button type="button" class="btn btn-link select-directory p-0 align-top" data-dirPath="' + path + '">' + pathComponent + '</button>')
                            .appendTo($bcUl);
                        path = path + '/';
                    });
                }
            }

            function showDirectoryList(data) {
                var dirs = [];
                $list.html('');
                var $ul = $('<ul class="list-group"/>').appendTo($list);
                if (data && data.entries) {
                    data.entries.forEach(function(elem) {
                        if (elem.$type === 'container') {
                            var $li = $('<li class="list-group-item" />');
                            $li.append('<button type="button" class="btn btn-link select-directory p-0" data-dirPath="' + elem.path + '">' + elem.name + '</button>')
                                .appendTo($ul);
                        }
                    });
                }
                $('<li class="list-group-item" />')
                    .append(
                        $('<div class="directory-input input-group" />')
                            .append('<input type="text" class="form-control" placeholder="新しいディレクトリ" />')
                            .append(
                                $('<div class="input-group-append" />')
                                    .append('<button type="button" class="btn btn-dark add-directory" data-dirPath="' + dirPath + '"><i class="fa fa-plus"></i></button>')
                            )
                        )
                    .appendTo($ul);
            }
        })(jQuery);
    </script>
}
